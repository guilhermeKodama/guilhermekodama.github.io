{"version":3,"sources":["App.js","serviceWorker.js","index.js","static/me_square.png","static/pandora.png","static/petfinder.png","static/carrercon.png","static/closetinn.png"],"names":["cards","id","url","image","ImagePandora","title","body","react_default","a","createElement","ImagePetFinder","ImageCarrerCon","ImageClosetinn","App","state","message","open","handleClick","console","log","_this","setState","handleClose","_this2","this","_this$state","classes","props","Fragment","CssBaseline_default","AppBar_default","position","className","appBar","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","aria-describedby","Toolbar_default","Assessment_default","icon","Typography_default","variant","color","noWrap","heroUnit","heroContent","Avatar_default","alt","src","ImageMe","bigAvatar","component","align","gutterBottom","paragraph","heroButtons","Grid_default","container","spacing","justify","item","react_clipboard_default","data-clipboard-text","clipboard","Button_default","onClick","e","classNames","layout","cardGrid","map","card","key","xs","sm","Card_default","CardMedia_default","cardMedia","CardContent_default","cardContent","CardActions_default","window","size","footer","footerLinks","Link_default","target","rel","href","link","React","Component","withStyles","theme","marginRight","unit","backgroundColor","palette","background","paper","display","flexDirection","justifyContent","maxWidth","margin","padding","concat","marginTop","Object","defineProperty","width","marginLeft","breakpoints","up","height","paddingTop","flexGrow","alignSelf","borderStyle","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.ebbd2c0c.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport AppBar from '@material-ui/core/AppBar'\nimport Button from '@material-ui/core/Button'\nimport CameraIcon from '@material-ui/icons/Assessment'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Grid from '@material-ui/core/Grid'\nimport Avatar from '@material-ui/core/Avatar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\nimport Clipboard from 'react-clipboard.js'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport ImageMe from './static/me_square.png'\nimport ImagePandora from './static/pandora.png'\nimport ImagePetFinder from './static/petfinder.png'\nimport ImageCarrerCon from './static/carrercon.png'\nimport ImageClosetinn from './static/closetinn.png'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  icon: {\n    marginRight: theme.spacing.unit * 2,\n  },\n  heroUnit: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  heroContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    maxWidth: 600,\n    margin: '0 auto',\n    padding: `${theme.spacing.unit * 8}px 0 ${theme.spacing.unit * 6}px`,\n  },\n  heroButtons: {\n    marginTop: theme.spacing.unit * 4,\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\n      width: 1100,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  cardGrid: {\n    padding: `${theme.spacing.unit * 8}px 0`,\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing.unit * 6,\n  },\n  footerLinks: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  link: {\n    marginRight: 20\n  },\n  bigAvatar: {\n    margin: 10,\n    width: 200,\n    height: 200,\n    alignSelf: 'center'\n  },\n  clipboard: {\n    borderStyle: 'none'\n  }\n})\n\nconst cards = [\n  {\n    id: 1,\n    url: 'https://github.com/guilhermeKodama/Pandora/blob/master/python-wavelet/pandora-ecg.ipynb',\n    image: ImagePandora,\n    title: 'Pandora - Arrhythmia Detection service',\n    body: (\n      <ul>\n        <li>ECG signal processing with BioSPPy</li>\n        <li>Feature engineering with time series ECG</li>\n        <li>Data wrangling with PhysioBank databases to create a labeled dataset</li>\n        <li>Machine Learning model for realtime  Arrhythmia Detection from ECG signal</li>\n        <li>85% accuracy for 5 different arrhythmia classes</li>\n      </ul>\n    )\n  },\n  {\n    id: 2,\n    url: 'https://www.kaggle.com/guilhermekodama/eda-petfinder-competition-catboost-baseline',\n    image: ImagePetFinder,\n    title: 'PetFinder Competition - Kaggle',\n    body: (\n      <ul>\n        <li>Extensive data exploration</li>\n        <li>Generating features from images using CNNs and PCA</li>\n        <li>Generating features from unstructured text using TF-IDF and TruncatedSVD</li>\n        <li>Feature engineering from structured data</li>\n        <li>Models precision/recall evaluation</li>\n        <li>Parameter Tuning</li>\n        <li>Top 23% on public leaderboard</li>\n      </ul>\n    )\n  },\n  {\n    id: 3,\n    url: 'https://www.kaggle.com/guilhermekodama/carrercon-rf-baseline-and-simple-features',\n    image: ImageCarrerCon,\n    title: 'CarrerCon - Kaggle',\n    body: (\n      <ul>\n        <li>Data exploration and visualization</li>\n        <li>Feature engineering with time series</li>\n        <li>Models evaluation</li>\n        <li>Parameter tuning</li>\n        <li>Top 100 score on public leaderboard</li>\n      </ul>\n    )\n  },\n  {\n    id: 4,\n    url: 'https://github.com/guilhermeKodama/Closetinn/tree/master/machineLearning',\n    image: ImageClosetinn,\n    title: 'Closetinn - Fashion recommendation service',\n    body: (\n      <ul>\n        <li>Data wrangling with web scrapped data from different fashion e-commerces sources</li>\n        <li>Collaborative filtering Recommendation System (real users)</li>\n        <li>Machine Learning model to predict user churn to improve email marketing and recommendations</li>\n      </ul>\n    )\n  }\n]\n\nclass App extends React.Component {\n  state = {\n    message: '',\n    open: false\n  }\n\n  handleClick = (message) => {\n    console.log('<MESSAGE:', message)\n    this.setState({ open: true, message })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  render() {\n    const { open, message } = this.state\n    const { classes } = this.props\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <AppBar position=\"static\" className={classes.appBar}>\n          <Snackbar\n            anchorOrigin={{ vertical: 'bottom',horizontal: 'right' }}\n            open={open}\n            autoHideDuration={6000}\n            onClose={this.handleClose}\n            ContentProps={{ 'aria-describedby': 'message-id' }}\n            message={message}\n          />\n          <Toolbar>\n            <CameraIcon className={classes.icon} />\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Data Science Portfolio\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <main>\n          {/* Hero unit */}\n          <div className={classes.heroUnit}>\n            <div className={classes.heroContent}>\n              <Avatar alt=\"GK\" src={ImageMe} className={classes.bigAvatar} />\n              <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                Guilherme Kodama\n              </Typography>\n              <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph>\n                I am a Data Scientist enthusiast passionate about solving problems using AI with experience\n                training and scaling ML models to production-ready services and +6 years experience\n                in the software development industry.\n              </Typography>\n              <div className={classes.heroButtons}>\n                <Grid container spacing={16} justify=\"center\">\n                  <Grid item>\n                  <Clipboard data-clipboard-text=\"guilherme.kodama@gmail.com\" className={classes.clipboard}>\n                    <Button onClick={(e) => this.handleClick('Email copied to clipboard!')} variant=\"contained\" color=\"primary\">\n                      Email me\n                    </Button>\n                    </Clipboard>\n                  </Grid>\n                  <Grid item>\n                    <Clipboard data-clipboard-text=\"+55 (92) 981233668\" className={classes.clipboard}>\n                      <Button onClick={(e) => this.handleClick('Number copied to clipboard!')} variant=\"outlined\" color=\"primary\">\n                        Call me\n                      </Button>\n                    </Clipboard>\n                  </Grid>\n                </Grid>\n              </div>\n            </div>\n          </div>\n          <div className={classNames(classes.layout, classes.cardGrid)}>\n            {/* End hero unit */}\n            <Grid container spacing={24}>\n              {cards.map(card => (\n                <Grid item key={card.id} xs={12} sm={6}>\n                  <Card className={classes.card}>\n                    <CardMedia\n                      className={classes.cardMedia}\n                      image={card.image}\n                      title=\"Image title\"\n                    />\n                    <CardContent className={classes.cardContent}>\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {card.title}\n                      </Typography>\n                      <Typography>\n                        {card.body}\n                      </Typography>\n                    </CardContent>\n                    <CardActions>\n                      <Button onClick={(e) => { window.open(card.url, '_blank') }} size=\"small\" color=\"primary\">\n                        View\n                      </Button>\n                    </CardActions>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </div>\n        </main>\n        {/* Footer */}\n        <footer className={classes.footer}>\n          <Typography variant=\"h6\" align=\"center\" gutterBottom>\n            Find me on:\n          </Typography>\n          <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\" className={classes.footerLinks}>\n            <Link target=\"_blank\" rel=\"noopener\" href={'https://www.kaggle.com/guilhermekodama'} color=\"inherit\" className={classes.link}>\n              Kaggle\n            </Link>\n            <Link target=\"_blank\" rel=\"noopener\" href={'https://www.linkedin.com/in/guilhermekodama/'} color=\"inherit\" className={classes.link}>\n              LinkedIn\n            </Link>\n            <Link target=\"_blank\" rel=\"noopener\" href={'https://github.com/guilhermeKodama'} color=\"inherit\" className={classes.link}>\n              GitHub\n            </Link>\n          </Typography>\n        </footer>\n        {/* End footer */}\n      </React.Fragment>\n    )\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/me_square.8216ba75.png\";","module.exports = __webpack_public_path__ + \"static/media/pandora.0b5c2c2d.png\";","module.exports = __webpack_public_path__ + \"static/media/petfinder.9981885a.png\";","module.exports = __webpack_public_path__ + \"static/media/carrercon.2abbb73b.png\";","module.exports = __webpack_public_path__ + \"static/media/closetinn.b4756270.png\";"],"sourceRoot":""}