{"version":3,"sources":["static/me_square.png","static/pi-monitor.png","static/petfinder.png","static/carrercon.png","static/closetinn.png","static/mee.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","cards","id","url","image","ImageMee","title","body","react_default","a","createElement","ImagePi","ImageClosetinn","ImagePetFinder","ImageCarrerCon","App","state","message","open","handleClick","console","log","_this","setState","handleClose","_this$state","this","classes","props","Fragment","CssBaseline","AppBar","position","className","appBar","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","aria-describedby","Toolbar","Assessment_default","icon","Typography","variant","color","noWrap","heroUnit","heroContent","Avatar","alt","src","ImageMe","bigAvatar","component","align","gutterBottom","paragraph","heroButtons","Grid","container","spacing","justify","item","Link","target","rel","href","link","LinkedIn_default","iconInfo","GitHub_default","MailOutline_default","Phone_default","classNames","layout","cardGrid","map","card","key","xs","sm","Card","CardMedia","cardMedia","CardContent","cardContent","CardActions","Button","onClick","e","window","size","footer","footerLinks","React","Component","withStyles","theme","marginRight","unit","marginBottom","backgroundColor","palette","background","paper","display","flexDirection","justifyContent","maxWidth","margin","padding","concat","marginTop","Object","defineProperty","width","marginLeft","breakpoints","up","height","paddingTop","flexGrow","alignSelf","clipboard","borderStyle","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ca429049.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me_square.8216ba75.png\";","module.exports = __webpack_public_path__ + \"static/media/pi-monitor.f08aa3b2.png\";","module.exports = __webpack_public_path__ + \"static/media/petfinder.9981885a.png\";","module.exports = __webpack_public_path__ + \"static/media/carrercon.2abbb73b.png\";","module.exports = __webpack_public_path__ + \"static/media/closetinn.b4756270.png\";","module.exports = __webpack_public_path__ + \"static/media/mee.4c80200e.png\";","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport AppBar from '@material-ui/core/AppBar'\nimport Button from '@material-ui/core/Button'\nimport AssessmentIcon from '@material-ui/icons/Assessment'\nimport EmailIcon from '@material-ui/icons/MailOutline'\nimport PhoneIcon from '@material-ui/icons/Phone'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Grid from '@material-ui/core/Grid'\nimport Avatar from '@material-ui/core/Avatar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport ImageMe from './static/me_square.png'\nimport ImagePi from './static/pi-monitor.png'\nimport ImagePetFinder from './static/petfinder.png'\nimport ImageCarrerCon from './static/carrercon.png'\nimport ImageClosetinn from './static/closetinn.png'\nimport ImageMee from './static/mee.png'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  icon: {\n    marginRight: theme.spacing.unit * 2,\n  },\n  iconInfo: {\n    marginBottom: -theme.spacing.unit * 1,\n  },\n  heroUnit: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  heroContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    maxWidth: 600,\n    margin: '0 auto',\n    padding: `${theme.spacing.unit * 8}px 0 ${theme.spacing.unit * 6}px`,\n  },\n  heroButtons: {\n    marginTop: theme.spacing.unit * 4,\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\n      width: 1100,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  cardGrid: {\n    padding: `${theme.spacing.unit * 8}px 0`,\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing.unit * 6,\n  },\n  footerLinks: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  link: {\n    marginRight: 20\n  },\n  bigAvatar: {\n    margin: 10,\n    width: 200,\n    height: 200,\n    alignSelf: 'center'\n  },\n  clipboard: {\n    borderStyle: 'none'\n  }\n})\n\nconst cards = [\n  {\n    id: 1,\n    url: 'https://github.com/somosmee/mee/blob/feat-association-analysis/datascience/Associative%20Analysis.ipynb',\n    image: ImageMee,\n    title: 'Mee - Association Analysis',\n    body: (\n      <div>\n        <p>\n          Mee is a Retail Tech which I helped increase the average ticket and decrease attendance time with item recommendations using Associative Analysis.\n        </p>\n        <ul>\n          <li>Training Apriori model to create association rules.</li>\n          <li>Display rules as suggestions to help attendants add more items to open orders increasing the average ticket.</li>\n          <li>Use suggestions as a \"smart cache\" to help attendants add commonly bought together items faster.</li>\n        </ul>\n      </div>\n    )\n  },\n  {\n    id: 2,\n    url: 'https://nbviewer.jupyter.org/github/guilhermeKodama/Pandora/blob/master/python-wavelet/pandora-ecg.ipynb',\n    image: ImagePi,\n    title: 'Pandora - Arrhythmia Detection service',\n    body: (\n      <div>\n        <p>\n        Pandora is a healthcare project focused on analysing signals from health monitors.\n        This first MVP processed and classified ECG signals for 5 different arrhytmias categories.\n        Check the video in the link for a demo to see the model and product in action.\n        </p>\n        <ul>\n          <li>ECG signal processing with BioSPPy</li>\n          <li>Feature engineering with time series ECG</li>\n          <li>Data wrangling with PhysioBank databases to create a labeled dataset</li>\n          <li>Machine Learning model for realtime  Arrhythmia Detection from ECG signal</li>\n          <li>85% accuracy for 5 different arrhythmia classes</li>\n        </ul>\n      </div>\n    )\n  },\n  {\n    id: 3,\n    url: 'https://github.com/guilhermeKodama/Closetinn/tree/master/machineLearning',\n    image: ImageClosetinn,\n    title: 'Closetinn - Fashion recommendation service',\n    body: (\n      <div>\n        <p>\n          Closetinn is a email service for clothes recommendations. Customers do a initial cloth selection and receive weekly emails with recommendations for many e-commerce sources.\n        </p>\n        <ul>\n          <li>Data wrangling with web scrapped data from different fashion e-commerces sources</li>\n          <li>Collaborative filtering Recommendation System (real users)</li>\n          <li>Machine Learning model to predict user churn to improve email marketing and recommendations</li>\n        </ul>\n      </div>\n    )\n  },\n  {\n    id: 4,\n    url: 'https://www.kaggle.com/guilhermekodama/eda-petfinder-competition-catboost-baseline',\n    image: ImagePetFinder,\n    title: 'PetFinder Competition - Kaggle',\n    body: (\n      <div>\n        <p>\n          In this competition you will be developing algorithms to predict the adoptability of pets - specifically, how quickly is a pet adopted? If successful, they will be adapted into AI tools that will guide shelters and rescuers around the world on improving their pet profiles' appeal, reducing animal suffering and euthanization.\n        </p>\n        <ul>\n          <li>Extensive data exploration</li>\n          <li>Generating features from images using CNNs and PCA</li>\n          <li>Generating features from unstructured text using TF-IDF and TruncatedSVD</li>\n          <li>Feature engineering from structured data</li>\n          <li>Models precision/recall evaluation</li>\n          <li>Parameter Tuning</li>\n          <li>Top 23% on public leaderboard</li>\n        </ul>\n      </div>\n    )\n  },\n  {\n    id: 5,\n    url: 'https://www.kaggle.com/guilhermekodama/carrercon-rf-baseline-and-simple-features',\n    image: ImageCarrerCon,\n    title: 'CarrerCon - Kaggle',\n    body: (\n      <div>\n        <p>\n          In this competition, you’ll help robots recognize the floor surface they’re standing on using data collected from Inertial Measurement Units (IMU sensors).\n        </p>\n        <ul>\n          <li>Data exploration and visualization</li>\n          <li>Feature engineering with time series</li>\n          <li>Models evaluation</li>\n          <li>Parameter tuning</li>\n          <li>Top 100 score on public leaderboard</li>\n        </ul>\n      </div>\n    )\n  }\n]\n\nclass App extends React.Component {\n  state = {\n    message: '',\n    open: false\n  }\n\n  handleClick = (message) => {\n    console.log('<MESSAGE:', message)\n    this.setState({ open: true, message })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  render() {\n    const { open, message } = this.state\n    const { classes } = this.props\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <AppBar position=\"static\" className={classes.appBar}>\n          <Snackbar\n            anchorOrigin={{ vertical: 'bottom',horizontal: 'right' }}\n            open={open}\n            autoHideDuration={6000}\n            onClose={this.handleClose}\n            ContentProps={{ 'aria-describedby': 'message-id' }}\n            message={message}\n          />\n          <Toolbar>\n            <AssessmentIcon className={classes.icon} />\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Data Science Portfolio\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <main>\n          {/* Hero unit */}\n          <div className={classes.heroUnit}>\n            <div className={classes.heroContent}>\n              <Avatar alt=\"GK\" src={ImageMe} className={classes.bigAvatar} />\n              <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                Guilherme Kodama\n              </Typography>\n              <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph>\n                I am a curious, driven and self-starter developer passionate about data that has created smart services and co-founded projects that helped solve world-class problems from the most different sectors for the last +7 years.\n              </Typography>\n              <div className={classes.heroButtons}>\n                <Grid container spacing={3} justify=\"center\">\n                  <Grid item>\n                    <Link target=\"_blank\" rel=\"noopener\" href={'https://www.linkedin.com/in/guilhermekodama/'} color=\"inherit\" className={classes.link}>\n                      <Typography variant=\"subtitle1\" color=\"textSecondary\" gutterBottom>\n                         <LinkedInIcon className={classes.iconInfo}/> LinkedIn\n                      </Typography>\n                    </Link>\n                  </Grid>\n                  <Grid item>\n                    <Link target=\"_blank\" rel=\"noopener\" href={'https://github.com/guilhermeKodama'} color=\"inherit\" className={classes.link}>\n                      <Typography variant=\"subtitle1\" color=\"textSecondary\" gutterBottom>\n                         <GitHubIcon className={classes.iconInfo}/> GitHub\n                      </Typography>\n                    </Link>\n                  </Grid>\n                  <Grid item>\n                    <Link target=\"_blank\" rel=\"noopener\" href={'https://www.kaggle.com/guilhermekodama'} color=\"inherit\" className={classes.link}>\n                      <Typography variant=\"subtitle1\" color=\"textSecondary\" gutterBottom>\n                         <AssessmentIcon className={classes.iconInfo}/> Kaggle\n                      </Typography>\n                    </Link>\n                  </Grid>\n                </Grid>\n                <Grid container spacing={3} justify=\"center\">\n                  <Grid item>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\" gutterBottom>\n                       <EmailIcon className={classes.iconInfo}/> guilherme.kodama@gmail.com\n                    </Typography>\n                  </Grid>\n                  <Grid item>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\" gutterBottom>\n                      <PhoneIcon className={classes.iconInfo}/> +55 11 98776-2113\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </div>\n            </div>\n          </div>\n          <div className={classNames(classes.layout, classes.cardGrid)}>\n            {/* End hero unit */}\n            <Grid container spacing={3}>\n              {cards.map(card => (\n                <Grid item key={card.id} xs={12} sm={6}>\n                  <Card className={classes.card}>\n                    <CardMedia\n                      className={classes.cardMedia}\n                      image={card.image}\n                      title=\"Image title\"\n                    />\n                    <CardContent className={classes.cardContent}>\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {card.title}\n                      </Typography>\n                      <Typography>\n                        {card.body}\n                      </Typography>\n                    </CardContent>\n                    <CardActions>\n                      <Button onClick={(e) => { window.open(card.url, '_blank') }} size=\"small\" color=\"primary\">\n                        VIEW PROJECT\n                      </Button>\n                    </CardActions>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </div>\n        </main>\n        {/* Footer */}\n        <footer className={classes.footer}>\n          <Typography variant=\"h6\" align=\"center\" gutterBottom>\n            Find me on:\n          </Typography>\n          <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\" className={classes.footerLinks}>\n            <Link target=\"_blank\" rel=\"noopener\" href={'https://www.kaggle.com/guilhermekodama'} color=\"inherit\" className={classes.link}>\n              Kaggle\n            </Link>\n            <Link target=\"_blank\" rel=\"noopener\" href={'https://www.linkedin.com/in/guilhermekodama/'} color=\"inherit\" className={classes.link}>\n              LinkedIn\n            </Link>\n            <Link target=\"_blank\" rel=\"noopener\" href={'https://github.com/guilhermeKodama'} color=\"inherit\" className={classes.link}>\n              GitHub\n            </Link>\n          </Typography>\n        </footer>\n        {/* End footer */}\n      </React.Fragment>\n    )\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}